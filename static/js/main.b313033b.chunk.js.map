{"version":3,"sources":["formstyles.module.css","Model/IFormStructure.ts","Model/FormStructure.ts","Fields/TextFieldRow.tsx","Fields/OptionsRow.tsx","Fields/DateFieldRow.tsx","Fields/DateTimeFieldRow.tsx","Fields/NumberFieldRow.tsx","Fields/LongTextFieldRow.tsx","Fields/HeadingRow.tsx","Fields/DownloadTextField.tsx","Rules/FormRules.ts","Rules/TabRules.ts","Rules/NavRules.ts","Model/IIncident.ts","Fields/IncidentsRow.tsx","Rules/FormRulesStructure.ts","Model/IExtraMSMonitored.ts","Fields/ExtraMSMonitoredRow.tsx","Form.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","formStyles","centerText","content","msPivotFix","textRight","downloadButtonContainer","actionButtonMargin","fullWidth","fieldRow","infoIcon","required","headerText","headerTextParent","hrStyle","companyLogo","marginBottom","FieldType","FormStructure","formStructure","Overview","tab","fields","type","downloadData","label","internalName","isRequired","hasInfo","info","disbaled","text","dropdown","options","operationTypes","reportTypes","countries","extraMSMonitored","reportPriorities","date","datetime","jroHubOrPickup","rolesInOperation","integer","longtext","heading","Pre-departure","In-flight","Arrival","Return-flight","stopOver","raReturnees","Incident(s)","incident","Outcome","TextFieldRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","setStateValue","bind","assertThisInitialized","prevProps","newState","setState","forceUpdate","fieldName","ns","key","onChanged","_this2","react_default","a","createElement","className","styles","Label","TextField","disabled","onChange","e","v","setValue","TooltipHost","Icon","iconName","React","Component","OptionsFieldRow","valueModel","isSelected","mapOptions","p","res","map","o","undefined","length","Array","Dropdown","selectedKey","DateFieldRow","Date","addExtraZero","onFormatDate","num","toDateString","console","log","getFullYear","getMonth","getDate","DatePicker","firstDayOfWeek","DayOfWeek","Monday","formatDate","onSelectDate","DateTimeFieldRow","d","h","m","split","dSplitted","dAsDate","hoursModel","minutesModel","dateModel","availableHours","getAvailableHours","availableMinutes","getAvailableMinutes","setDateValue","setHourValue","setMinuteValue","result","i","model","toString","push","hour","minute","concat","NumberFieldRow","oldValue","isNaN","parseInt","LongTextFieldRow","multiline","rows","HeadingRow","MessageBar","DownloadTextFieldRow","showErrorDialog","onDownload","hideErrorDialog","fetch","then","data","onDownloadData","catch","error","_this3","PrimaryButton","iconProps","allowDisabledFocus","onClick","Dialog","hidden","title","onDismiss","FormRules","setValueIf","condition","fieldInternalNameToChangeValue","newValue","TabRules","setExtraMSRulesTabs","structure","exisitingExtraTabs","filter","x","indexOf","hideIf","navLabel","tabLabelToHide","nav","isHidden","newStructure","removeTabs","clearStructure","tabDefinition","t","count","_loop","td","JSON","parse","stringify","f","insertTab","forEach","field","keys","modelKey","nm","labelStartsWith","newTabs","lastLabelContains","index","splice","NavRules","IIncident","IncidentsRow","incidents","addIncident","setIncidentValue","inc","HeadingRow_HeadingRow","isHeading","OptionsRow_OptionsFieldRow","LongTextFieldRow_LongTextFieldRow","DefaultButton","removeIncident","Text","FormRulesStructure","check9","fieldInternalToHide","tabLabel","l","IExtraMSMonitored","country","ExtraMSMonitoredRow","addMS","setMSValue","removeMS","Form","apiAddress","apiAddressIsLive","formRules","formRulesStructure","tabRules","navRules","formRefs","defaultNav","defaultTab","awaitingRequests","navDefinition","links","fs","name","url","target","selectedNav","selectedTab","showRequestOffline","showRequestSentDialog","showRequestOfflineSent","showPleaseWait","showValidationDialog","failedValidations","onSubmit","onCancel","trySendAgain","onNavClick","onTabClick","getFormForTab","getFieldRow","onSaveDraft","onBackToDraft","runRules","setTimeout","setInterval","offlineRequests","localStorage","getItem","offlineParsed","requestsArray","requestsCopy","ready","method","success","setItem","modelFromStorage","isValid","requiredEmptyFields","navKey","failure","newOfflineRequests","icon","_this4","createRef","draft","_this5","ev","item","_this6","itemKey","_this7","dir","Nav","onLinkClick","groups","root","boxSizing","border","Pivot","defaultSelectedIndex","PivotItem","itemIcon","ProgressIndicator","percentComplete","modalProps","isBlocking","minWidth","fieldProps","_this8","TextFieldRow_TextFieldRow","assign","onModelChanged","NumberFieldRow_NumberFieldRow","DateFieldRow_DateFieldRow","DateTimeFieldRow_DateTimeFieldRow","DownloadTextField_DownloadTextFieldRow","IncidentsRow_IncidentsRow","ExtraMSMonitoredRow_ExtraMSMonitoredRow","tabName","navName","_this9","FontWeights","semibold","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","mergeStyles","selectors",":global(body), :global(html), :global(#root)","margin","padding","height","ReactDOM","render","Customizer","FluentCustomizations","initializeIcons","Form_Form","document","getElementById","URL","process","href","addEventListener","response","contentType","headers","get","status","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b313033b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyles\":\"formstyles_formStyles__x2ZJt\",\"centerText\":\"formstyles_centerText__1nqNE\",\"content\":\"formstyles_content__2o4L6\",\"msPivotFix\":\"formstyles_msPivotFix__nl9ZG\",\"textRight\":\"formstyles_textRight__340i6\",\"downloadButtonContainer\":\"formstyles_downloadButtonContainer__1jTMa\",\"actionButtonMargin\":\"formstyles_actionButtonMargin__1EEY5\",\"fullWidth\":\"formstyles_fullWidth__2jviD\",\"fieldRow\":\"formstyles_fieldRow__37urx\",\"infoIcon\":\"formstyles_infoIcon__Resyy\",\"required\":\"formstyles_required__2shqH\",\"headerText\":\"formstyles_headerText__3AvVZ\",\"headerTextParent\":\"formstyles_headerTextParent__2i-bt\",\"hrStyle\":\"formstyles_hrStyle__2UFzC\",\"companyLogo\":\"formstyles_companyLogo__pWecI\",\"marginBottom\":\"formstyles_marginBottom__1Jxe3\"};","export default interface IFormStructure{\r\n    Overview:Array<ITabDefinition>;\r\n    \"Pre-departure\":Array<ITabDefinition>;\r\n    \"In-flight\":Array<ITabDefinition>;\r\n    \"Arrival\":Array<ITabDefinition>;\r\n    \"Return-flight\":Array<ITabDefinition>;\r\n    \"Incident(s)\":Array<ITabDefinition>;\r\n    \"Outcome\":Array<ITabDefinition>;\r\n}\r\n\r\nexport interface ITabDefinition{\r\n    tab:string;\r\n    isHidden?:boolean;\r\n    fields:Array<IFieldDefinition>\r\n}\r\n\r\nexport interface IFieldDefinition{\r\n    value?:any;\r\n    internalName:string;\r\n    label:string;\r\n    type:FieldType;\r\n    hasInfo:boolean;\r\n    info?:string;\r\n    isRequired: boolean;\r\n    onDownloadData?: (data:any)=>void;\r\n    disbaled?:boolean;\r\n    subformState?:any; //@TODO: this may be usefull for intelligent forms\r\n    options?:Array<string>;\r\n    onChanged?: (value:any)=>void;\r\n    isHeading?: boolean;\r\n    isHidden?: boolean;\r\n}\r\n\r\nexport enum FieldType {\r\n    text,\r\n    dropdown,\r\n    divider,\r\n    date,\r\n    time,\r\n    integer,\r\n    longtext,\r\n    incident,\r\n    downloadData,\r\n    datetime,\r\n    heading,\r\n    extraMSMonitored\r\n}","import IFormStructure, { FieldType } from \"./IFormStructure\";\r\n\r\nexport default class FormStructure{\r\n    \r\n    public static countries = [\"AT\", \"BE\", \"BG\",\"CY\"];\r\n    public static operationTypes = [\"JRO\",\"CRO\",\"NRO\",\"Scheduled\"];\r\n    public static reportTypes = [\"Normal\",\"Pilot\",\"Training\",\"Assessment\"];\r\n    public static reportPriorities = [\"Normal\",\"Urgent\"];\r\n    public static jroHubOrPickup = [\"No\", \"Hub\",\"Pick-up\"];\r\n    public static rolesInOperation = [\"OMS\",\"PMS\",\"CoR\",\"Absent\"];\r\n    public static stopOver = [\"No\",\"Yes\"];\r\n    public static raReturnees = [\"No\",\"Yes\"];\r\n\r\n    formStructure:IFormStructure = {\r\n        \"Overview\":[\r\n            {tab:\"Mission identity\", fields:[\r\n                {\r\n                    type: FieldType.downloadData,\r\n                    label: \"Operation ID\",\r\n                    internalName: \"Operation ID\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,                           \r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"Mission name\",\r\n                    internalName: \"Mission name\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,       \r\n                }, {\r\n                    type: FieldType.dropdown,\r\n                    label: \"Operation type\",\r\n                    internalName: \"Operation type\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.operationTypes\r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"Monitor ID\",\r\n                    internalName: \"Monitor ID\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,       \r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"2nd Monitor ID\",\r\n                    internalName: \"2nd Monitor ID\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.dropdown,\r\n                    label: \"Report type\",\r\n                    internalName: \"Report type\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.reportTypes\r\n                }, {\r\n                    type: FieldType.dropdown,\r\n                    label: \"MS monitored\",\r\n                    internalName: \"MS monitored\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.countries\r\n                }, {\r\n                    type: FieldType.extraMSMonitored,\r\n                    label: \"Extra MS monitored\",\r\n                    internalName: \"Extra MS monitored\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.countries\r\n                }, {\r\n                    type: FieldType.dropdown,\r\n                    label: \"MS organising\",\r\n                    internalName: \"MS organising\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.countries\r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"CoR collecting\",\r\n                    internalName: \"CoR collecting\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"Country #1\",\r\n                    internalName: \"Country #1\",\r\n                    isRequired:true,\r\n                    hasInfo:false,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"Country #2\",\r\n                    internalName: \"Country #2\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                }, {\r\n                    type: FieldType.text,\r\n                    label: \"Country #3\",\r\n                    internalName: \"Country #3\",\r\n                    isRequired:false,\r\n                    hasInfo:false,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.dropdown,\r\n                    label: \"Report priority\",\r\n                    internalName: \"Report priority\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.reportPriorities\r\n                },{\r\n                    type: FieldType.text,\r\n                    label: \"Report language\",\r\n                    internalName: \"Report language\",\r\n                    isRequired:true,\r\n                    hasInfo:false,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                }, \r\n            ]}, \r\n            {tab:\"Planned itinerary\", fields:[\r\n                {\r\n                    type: FieldType.date,\r\n                    label: \"Date\",\r\n                    internalName: \"Date\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },{\r\n                    type: FieldType.text,\r\n                    label: \"Airport/port\",\r\n                    internalName: \"Airport/port\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },\r\n                {\r\n                    type: FieldType.datetime,\r\n                    label: \"Depart\",\r\n                    internalName: \"pi_Depart\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },\r\n                {\r\n                    type: FieldType.datetime,\r\n                    label: \"Arrive\",\r\n                    internalName: \"pi_Arrive\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },{\r\n                    type: FieldType.dropdown,\r\n                    label: \"JRO hub or pick-up\",\r\n                    internalName: \"JRO hub or pick-up\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.jroHubOrPickup\r\n                }\r\n            ]},\r\n            {tab:\"MS monitored\", fields:[\r\n                {\r\n                    type: FieldType.dropdown,\r\n                    label: \"Role in operation\",\r\n                    internalName: \"Role in operation\",\r\n                    isRequired: true,\r\n                    hasInfo: false,                    \r\n                    disbaled: false,       \r\n                    options: FormStructure.rolesInOperation\r\n                }, {\r\n                    type: FieldType.integer,\r\n                    label: \"Escort leader\",\r\n                    internalName: \"Escort leader\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,                           \r\n                }, {\r\n                    type: FieldType.integer,\r\n                    label: \"Total number of escorts\",\r\n                    internalName: \"Total number of escorts\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Supplied on selection of monitor for operation\",                    \r\n                    disbaled:false,                           \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Medical team\",\r\n                    internalName: \"Medical team\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Medical services\",\r\n                    internalName: \"Medical services\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Interpreters\",\r\n                    internalName: \"Interpreters\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Interpretation services\",\r\n                    internalName: \"Interpretation services\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                }\r\n            ]},\r\n            {tab:\"Other states and participants\", fields:[\r\n                {\r\n                    type: FieldType.heading,\r\n                    label: \"Other states participating\",\r\n                    internalName: \"Other states participating\",\r\n                    isRequired:false,\r\n                    hasInfo:false, \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.text,\r\n                    label: \"Country name\",\r\n                    internalName: \"osap_Country name\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.dropdown,\r\n                    label: \"Role in operation\",\r\n                    internalName: \"osap_Role in operation\",\r\n                    isRequired: true,\r\n                    hasInfo: false,                    \r\n                    disbaled: false,       \r\n                    options: FormStructure.rolesInOperation\r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Teams of other states\",\r\n                    internalName: \"Teams of other states\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Other state personnel\",\r\n                    internalName: \"Other state personnel\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Monitors of other states\",\r\n                    internalName: \"Monitors of other states\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Other participants\",\r\n                    internalName: \"Other participants\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.text,\r\n                    label: \"FRONTEX representative\",\r\n                    internalName: \"FRONTEX representative\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"Please edit if plan changes\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Other participants\",\r\n                    internalName: \"op_Other participants\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Other participants\",\r\n                    disbaled:false,       \r\n                }\r\n            ]},\r\n        ],\r\n        \"Pre-departure\":[\r\n            {tab:\"Inf. for returnees, escort briefing and reception\", fields:[\r\n                {\r\n                    type: FieldType.heading,\r\n                    label: \"Information for returnees\",\r\n                    internalName: \"Information for returnees\",\r\n                    isRequired:false,\r\n                    hasInfo:true, \r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Contact talks\",\r\n                    internalName: \"Contact talks\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Other participants\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Complaints\",\r\n                    internalName: \"Complaints\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"Other participants\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Escort briefing\",\r\n                    internalName: \"heading_Escort briefing\",\r\n                    isRequired:false,\r\n                    hasInfo:false, \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Escort briefing\",\r\n                    internalName: \"Escort briefing\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Vulnerable persons\",\r\n                    internalName: \"Vulnerable persons\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Reception\",\r\n                    internalName: \"Reception\",\r\n                    isRequired:false,\r\n                    hasInfo:true, \r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Holding facility\",\r\n                    internalName: \"Holding facility\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Medical clearance\",\r\n                    internalName: \"Medical clearance\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                }\r\n            ]},\r\n            {tab:\"Communications, vulnerable persons\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"Communications\",\r\n                internalName: \"Communications\",\r\n                isRequired:false,\r\n                hasInfo:true, \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Escort relations\",\r\n                internalName: \"Escort relations\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"External contact\",\r\n                internalName: \"Medical clearance\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Vulnerable persons\",\r\n                internalName: \"header_Vulnerable persons\",\r\n                isRequired:false,\r\n                hasInfo:true, \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Children\",\r\n                internalName: \"Children\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Vulnerable persons\",\r\n                internalName: \"Vulnerable persons\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]},\r\n            {tab:\"1st security check, transfer, waiting area\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"First security check\",\r\n                internalName: \"First security check\",\r\n                isRequired:false,\r\n                hasInfo:true, \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Searches of belongings\",\r\n                internalName: \"Searches of belongings\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Body searches – 1st check\",\r\n                internalName: \"Body searches – 1st check\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Information for returnees\",\r\n                internalName: \"Information for returnees\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Transfer of returnees\",\r\n                internalName: \"Transfer of returnees\",\r\n                isRequired:false,\r\n                hasInfo:false, \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Transfer of returnees to waiting area\",\r\n                internalName: \"Transfer of returnees to waiting area\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }, {\r\n                type: FieldType.heading,\r\n                label: \"Waiting area\",\r\n                internalName: \"Waiting area\",\r\n                isRequired:false,\r\n                hasInfo:false, \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Basic needs\",\r\n                internalName: \"Basic needs\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Special needs\",\r\n                internalName: \"Special needs\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }\r\n            ]},\r\n            {tab:\"JRO briefing, monitors meeting, 2nd security check\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"JRO biefing\",\r\n                internalName: \"header_JRO biefing\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"JRO biefing\",\r\n                internalName: \"JRO biefing\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Vulnerable persons\",\r\n                internalName: \"jbmm2sc_Vulnerable persons\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Monitors meeting\",\r\n                internalName: \"Monitors meeting\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"JRO/CRO meeting of monitors\",\r\n                internalName: \"JRO/CRO meeting of monitors\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Second security check\",\r\n                internalName: \"Second security check\",\r\n                isRequired:false,\r\n                hasInfo:true,  \r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"2nd security check\",\r\n                internalName: \"2nd security check\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Body searches\",\r\n                internalName: \"Body searches\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },\r\n        ]},\r\n            {tab:\"Transfer, embarkation\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"Transfer to aircraft\",\r\n                internalName: \"Transfer to aircraft\",\r\n                isRequired:false,\r\n                hasInfo:false,   \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Conditions of transfer\",\r\n                internalName: \"Conditions of transfer\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Embarkation\",\r\n                internalName: \"header_Embarkation\",\r\n                isRequired:false,\r\n                hasInfo:false,   \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Not boarded\",\r\n                internalName: \"Not boarded\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Embarkation\",\r\n                internalName: \"Embarkation\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Scheduled transport\",\r\n                internalName: \"Scheduled transport\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]},\r\n        ],\r\n        \"In-flight\":[\r\n            {tab:\"Actual schedule\", fields:[{\r\n                type: FieldType.date,\r\n                label: \"Date\",\r\n                internalName: \"as_Date\",\r\n                isRequired:true,\r\n                hasInfo:true,                  \r\n                info:\"@TODO\",\r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.text,\r\n                label: \"Airport/port\",\r\n                internalName: \"as_Airport/port\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info:\"Please edit if plan changes\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.datetime,\r\n                label: \"Depart\",\r\n                internalName: \"as_Depart\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info: \"The closing of the transport door. All times as for start time zone!\",                  \r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.datetime,\r\n                label: \"Arrive\",\r\n                internalName: \"as_Arrive\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info: \"The closing of the transport door. All times as for start time zone!\",                   \r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.dropdown,\r\n                label: \"JRO hub or pick-up\",\r\n                internalName: \"as_JRO hub or pick-up\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info:\"If contingent disembards, then hub; if contingents stays on plane whilist others board, then pick-up, otherwise NO\",                    \r\n                disbaled:false,       \r\n                options:FormStructure.jroHubOrPickup\r\n            }\r\n            ]},\r\n            {tab:\"Returnees boarded\", fields:[{\r\n                type: FieldType.integer,\r\n                label: \"Adults 18 and over\",\r\n                internalName: \"Adults 18 and over\",\r\n                isRequired:true,\r\n                hasInfo:false,                 \r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.integer,\r\n                label: \"Minors between 6 and 18\",\r\n                internalName: \"Minors between 6 and 18\",\r\n                isRequired:true,\r\n                hasInfo:false,                    \r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.integer,\r\n                label: \"Infants 5 and under\",\r\n                internalName: \"Infants 5 and under\",\r\n                isRequired:true,\r\n                hasInfo:false,                  \r\n                disbaled:false,                           \r\n            },{\r\n                type: FieldType.integer,\r\n                label: \"Total number of returnees\",\r\n                internalName: \"Total number of returnees\",\r\n                isRequired:true,\r\n                hasInfo:false,                    \r\n                disbaled:true,                           \r\n            },{\r\n                type: FieldType.integer,\r\n                label: \"Country totals\",\r\n                internalName: \"Country totals\",\r\n                isRequired:true,\r\n                hasInfo:false,                  \r\n                disbaled:true,                           \r\n            },]},\r\n            {tab:\"Relations and welfare on-board\", fields:[\r\n                {\r\n                    type: FieldType.heading,\r\n                    label: \"Relations on-board\",\r\n                    internalName: \"Relations on-board\",\r\n                    isRequired:false,\r\n                    hasInfo:false,   \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Seating\",\r\n                    internalName: \"Seating\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Conflict\",\r\n                    internalName: \"Conflict\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Communication\",\r\n                    internalName: \"Communication\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Welfare on-board\",\r\n                    internalName: \"Welfare on-board\",\r\n                    isRequired:false,\r\n                    hasInfo:false,   \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Basic needs\",\r\n                    internalName: \"Basic needs\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Special needs\",\r\n                    internalName: \"Special needs\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]},\r\n        ],\r\n        \"Arrival\":[\r\n            {tab:\"Arrival conditions\", fields:[\r\n                {\r\n                    type: FieldType.text,\r\n                    label: \"Country of return\",\r\n                    internalName: \"Country of return\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                   \r\n                    disbaled:true,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Conditions at handover\",\r\n                    internalName: \"Conditions at handover\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Conditions on arrival in CoR\",\r\n                    internalName: \"Conditions on arrival in CoR\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]},\r\n            {tab:\"Handover\", fields:[\r\n                {\r\n                    type: FieldType.longtext,\r\n                    label: \"Handover conditions\",\r\n                    internalName: \"Handover conditions\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Personal information\",\r\n                    internalName: \"Personal information\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Not presented\",\r\n                    internalName: \"Not presented\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Refused\",\r\n                    internalName: \"Refused\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]}, \r\n        ],\r\n        \"Return-flight\":[\r\n            {tab:\"Actual schedule (return)\", fields:[\r\n                {\r\n                    type: FieldType.date,\r\n                    label: \"Date\",\r\n                    internalName: \"asr_Date\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },{\r\n                    type: FieldType.text,\r\n                    label: \"City\",\r\n                    internalName: \"asr_City\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.dropdown,\r\n                    label: \"Stopover\",\r\n                    internalName: \"asr_Stopover\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",                    \r\n                    disbaled:false,       \r\n                    options:FormStructure.stopOver\r\n                },\r\n                {\r\n                    type: FieldType.datetime,\r\n                    label: \"Depart\",\r\n                    internalName: \"asr_Depart\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },\r\n                {\r\n                    type: FieldType.datetime,\r\n                    label: \"Arrive\",\r\n                    internalName: \"asr_Arrive\",\r\n                    isRequired:true,\r\n                    hasInfo:false,                  \r\n                    disbaled:false,                           \r\n                },\r\n            ]}, \r\n            {tab:\"Returning returnees\", fields:[{\r\n                type: FieldType.dropdown,\r\n                label: \"Returnees\",\r\n                internalName: \"ra_Returnees\",\r\n                isRequired:true,\r\n                hasInfo:true,\r\n                info:\"@TODO\",                    \r\n                disbaled:false,       \r\n                options:FormStructure.raReturnees\r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Stopover security\",\r\n                internalName: \"Stopover security\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]}, \r\n            {tab:\"Relations and welfare on-board\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"Relations on-board\",\r\n                internalName: \"header_Relations on-board\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Seating\",\r\n                internalName: \"rawob_Seating\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Conflict\",\r\n                internalName: \"rawob_conflict\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Communication\",\r\n                internalName: \"rawob_Communication\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Welfare on-board\",\r\n                internalName: \"header_Welfare on-board\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Basic needs\",\r\n                internalName: \"rawob_Basic needs\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Special needs\",\r\n                internalName: \"rawob_Special needs\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },\r\n            ]}, \r\n            {tab:\"Debriefing\", fields:[\r\n                {\r\n                    type: FieldType.longtext,\r\n                    label: \"Debriefing\",\r\n                    internalName: \"d_Debriefing\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Topics\",\r\n                    internalName: \"Topics\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Monitor's remarks\",\r\n                    internalName: \"Monitor's remarks\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Feedback\",\r\n                    internalName: \"Feedback\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]}, \r\n        ],\r\n        \"Incident(s)\":[\r\n            {tab:\"Incident(s)\", fields:[\r\n                {\r\n                    type: FieldType.incident,\r\n                    label: \"Incidents\",\r\n                    internalName: \"Incidents\",\r\n                    isRequired:false,\r\n                    hasInfo:false,       \r\n                },\r\n            ]}, \r\n            {tab:\"Coercive measures justification\", fields:[\r\n                {\r\n                    type: FieldType.longtext,\r\n                    label: \"Justification\",\r\n                    internalName: \"Justification\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Enforcers\",\r\n                    internalName: \"Enforcers\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]}, \r\n            {tab:\"Escort-returnee relations, bodily force\", fields:[\r\n                {\r\n                    type: FieldType.heading,\r\n                    label: \"Escort-returnee relations\",\r\n                    internalName: \"header_Escort-returnee relations\",\r\n                    isRequired:false,\r\n                    hasInfo:false,  \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Escort-returnee relations\",\r\n                    internalName: \"Justification\",\r\n                    isRequired:false,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Bodily face\",\r\n                    internalName: \"header_Bodily face\",\r\n                    isRequired:false,\r\n                    hasInfo:false,  \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Bodily force\",\r\n                    internalName: \"Bodily force\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]}, \r\n            {tab:\"Restraints, sedative measures, proportionality\", fields:[\r\n                {\r\n                    type: FieldType.heading,\r\n                    label: \"Restraints\",\r\n                    internalName: \"header_Restraints\",\r\n                    isRequired:false,\r\n                    hasInfo:false,  \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Restraints used\",\r\n                    internalName: \"Bodily force\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Sedative measures\",\r\n                    internalName: \"header_Sedative measures\",\r\n                    isRequired:false,\r\n                    hasInfo:false,  \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Sedative measures\",\r\n                    internalName: \"Sedative measures\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.heading,\r\n                    label: \"Proportionality\",\r\n                    internalName: \"header_Proportionality\",\r\n                    isRequired:false,\r\n                    hasInfo:false,  \r\n                    disbaled:false,       \r\n                },{\r\n                    type: FieldType.longtext,\r\n                    label: \"Necessity & proportionality\",\r\n                    internalName: \"Necessity & proportionality\",\r\n                    isRequired:true,\r\n                    hasInfo:true,\r\n                    info:\"@TODO\",\r\n                    disbaled:false,       \r\n                },\r\n            ]}, \r\n\r\n        ],\r\n        \"Outcome\":[\r\n            {tab:\"Preparation of mission\", fields:[{\r\n                type: FieldType.longtext,\r\n                label: \"General preparation\",\r\n                internalName: \"General preparation\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Permitted restraints\",\r\n                internalName: \"Permitted restraints\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]}, \r\n            {tab:\"Monitor-participant relations\", fields:[{\r\n                type: FieldType.longtext,\r\n                label: \"Escort-monitor relations\",\r\n                internalName: \"Escort-monitor relations\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Other participants-monitor relations\",\r\n                internalName: \"Other participants-monitor relations\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]}, \r\n            {tab:\"Summary of operation\", fields:[{\r\n                type: FieldType.longtext,\r\n                label: \"Summary of operation\",\r\n                internalName: \"Summary of operation\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            }]}, \r\n            {tab:\"Complaints, recommendations\", fields:[{\r\n                type: FieldType.heading,\r\n                label: \"Complaints\",\r\n                internalName: \"header_Complaints\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Complaints materials\",\r\n                internalName: \"Complaints materials\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Complaints made\",\r\n                internalName: \"Complaints made\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.heading,\r\n                label: \"Recommendations\",\r\n                internalName: \"header_Recommendations\",\r\n                isRequired:false,\r\n                hasInfo:false,  \r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.longtext,\r\n                label: \"Recommendations\",\r\n                internalName: \"Recommendations\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@TODO\",\r\n                disbaled:false,       \r\n            },{\r\n                type: FieldType.text,\r\n                label: \"Recommendation serial no.\",\r\n                internalName: \"Recommendation serial no.\",\r\n                isRequired:false,\r\n                hasInfo:true,\r\n                info:\"@todo\",                    \r\n                disbaled:false,       \r\n            },]},  \r\n        ]\r\n    };\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"./../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class TextFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : \"\"\r\n        };\r\n        this.setStateValue = this.setStateValue.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : \"\"\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    \r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value.key; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md8 \"+styles.marginBottom} >      \r\n                    <TextField  \r\n                        disabled={this.props.disbaled}\r\n                        value={this.state.value}\r\n                        onChange={(e,v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Label,Icon, TooltipHost, Dropdown, IDropdownOption } from \"office-ui-fabric-react\";\r\nimport styles from './../formstyles.module.css'; \r\nimport { IFieldDefinition } from \"./../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class OptionsFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : \"\",\r\n            valueModel:{\r\n                key: this.props.value ? this.props.value : \"\",\r\n                text: this.props.value ? this.props.value : \"\",\r\n                isSelected:true,\r\n            }, \r\n            options: this.mapOptions(props),\r\n        };\r\n\r\n        this.setValue = this.setValue.bind(this);\r\n        this.mapOptions = this.mapOptions.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : \"\",\r\n            valueModel:{\r\n                key: prevProps.value ? prevProps.value : \"\",\r\n                text: prevProps.value ? prevProps.value : \"\",\r\n                isSelected:true,\r\n            }, \r\n            options: this.mapOptions(prevProps),\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value.key;\r\n        ns.valueModel = value; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value.key);\r\n    }\r\n\r\n    mapOptions(p:IFieldDefinition):Array<IDropdownOption>{\r\n        if(p && p.options){\r\n            let res = p.options.map((o:string)=>{\r\n                return {key:o, text:o, isSelected:false} as IDropdownOption;\r\n            });\r\n            if((this.props.value == undefined || this.props.value == \"\") && res.length>0)\r\n                res[0].isSelected = true;\r\n            return res;\r\n        } else return new Array<IDropdownOption>();\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md8 \"+styles.marginBottom} >      \r\n                    <Dropdown  \r\n                        disabled={this.props.disbaled}\r\n                        options={this.state.options}\r\n                        selectedKey={this.state.valueModel.key}\r\n                        onChange={(e,v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType, DatePicker, DayOfWeek } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class DateFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? new Date(this.props.value) : null\r\n        };\r\n        \r\n        this.setStateValue = this.setStateValue.bind(this);\r\n        this.addExtraZero = this.addExtraZero.bind(this);\r\n        this.onFormatDate = this.onFormatDate.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? new Date(prevProps.value) : null\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n\r\n    }\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    \r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value;\r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n\r\n    addExtraZero(num:any){\r\n        if(num == null) return '';\r\n\r\n        if(num<10) num = '0'+num;\r\n        return num;\r\n    }\r\n\r\n    onFormatDate(date?: Date): string{\r\n\r\n        if(typeof date == \"string\") date = new Date(date);\r\n\r\n        if(date && date.toDateString()!=\"Invalid Date\"){\r\n            console.log(date);\r\n            return this.addExtraZero(date.getFullYear()) +'-'+  this.addExtraZero((date.getMonth() + 1)) +'-'+  this.addExtraZero(date.getDate());\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md8 \"+styles.marginBottom} >      \r\n                    <DatePicker  \r\n                        disabled={this.props.disbaled}\r\n                        firstDayOfWeek={DayOfWeek.Monday}\r\n                        formatDate={this.onFormatDate}\r\n                        value={this.state.value}                        \r\n                        onSelectDate={(v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType, DatePicker, DayOfWeek, IDropdownOption, Dropdown } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class DateTimeFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n\r\n        let d=null, h=null, m=null;\r\n        \r\n        if(this.props.value){\r\n            d = this.props.value.split(' ')[0];            \r\n            h = this.props.value.split(' ')[1].split(':')[0];\r\n            m = this.props.value.split(' ')[1].split(':')[1];\r\n        }\r\n\r\n        let dSplitted=[];\r\n        let dAsDate = null;\r\n        if(d!=null){\r\n            dSplitted = d.split('-');\r\n            dAsDate  = new Date(dSplitted[0],dSplitted[1],dSplitted[2]);\r\n        }\r\n        \r\n\r\n        this.state = {\r\n            hoursModel:{\r\n                key: this.props.value ? h:\"00\",\r\n                text: this.props.value ? h:\"00\",\r\n            },\r\n            minutesModel:{\r\n                key: this.props.value ? m:\"00\",\r\n                text: this.props.value ? m:\"00\",\r\n            },\r\n            dateModel: this.props.value ? dAsDate:\"\",\r\n            value: this.props.value ? this.props.value : \"\",\r\n            availableHours: this.getAvailableHours(),\r\n            availableMinutes: this.getAvailableMinutes(),\r\n        };\r\n\r\n        this.setStateValue = this.setStateValue.bind(this);\r\n        this.setDateValue = this.setDateValue.bind(this);\r\n        this.setHourValue = this.setHourValue.bind(this);\r\n        this.setMinuteValue = this.setMinuteValue.bind(this);\r\n        this.onFormatDate = this.onFormatDate.bind(this);\r\n        this.addExtraZero = this.addExtraZero.bind(this);\r\n    }\r\n\r\n    \r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n\r\n        let d=null, h=null, m=null;\r\n        \r\n        if(prevProps.value){\r\n            d = prevProps.value.split(' ')[0];            \r\n            h = prevProps.value.split(' ')[1].split(':')[0];\r\n            m = prevProps.value.split(' ')[1].split(':')[1];\r\n        }\r\n\r\n        \r\n        let dSplitted=[];\r\n        let dAsDate = null;\r\n        if(d!=null){\r\n            dSplitted = d.split('-');\r\n            dAsDate  = new Date(dSplitted[0],dSplitted[1],dSplitted[2]);\r\n        }\r\n        \r\n\r\n        let newState = {\r\n            hoursModel:{\r\n                key: prevProps.value ? h:\"00\",\r\n                text: prevProps.value ? h:\"00\",\r\n            },\r\n            minutesModel:{\r\n                key: prevProps.value ? m:\"00\",\r\n                text: prevProps.value ? m:\"00\",\r\n            },\r\n            dateModel: prevProps.value ? dAsDate:\"\",\r\n            value: prevProps.value ? prevProps.value : \"\",\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    getAvailableHours():Array<IDropdownOption>{\r\n        let result = Array<IDropdownOption>();\r\n        \r\n        for(let i=0;i<24;i++){\r\n            let model = {key:i.toString(), text:i.toString()};\r\n            if(i<10){\r\n                model.key='0'+model.key;\r\n                model.text='0'+model.text;\r\n            }\r\n            result.push(model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getAvailableMinutes():Array<IDropdownOption>{\r\n        let result = Array<IDropdownOption>();\r\n        \r\n        for(let i=0;i<60;i++){\r\n            let model = {key:i.toString(), text:i.toString()};\r\n            if(i<10){\r\n                model.key='0'+model.key;\r\n                model.text='0'+model.text;\r\n            }\r\n            result.push(model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    \r\n    setValue(date?:any, hour?:any, minute?: any){ \r\n        let value = ''; \r\n        let d = this.state.dateModel;\r\n        if(date){\r\n            this.setState({dateModel:date});\r\n            d=date;\r\n        }\r\n\r\n        let h = this.state.hoursModel.text;\r\n        if(hour){ \r\n            this.setState({hoursModel:hour});\r\n            h=hour.text;\r\n        }\r\n\r\n        let m = this.state.minutesModel.text;\r\n        if(minute){\r\n            this.setState({minutesModel:minute});\r\n            m=minute.text;\r\n        }\r\n\r\n        value=`${this.onFormatDate(d)} ${h}:${m}`;\r\n        this.setState({value:value}, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    addExtraZero(num:any){\r\n        if(num == null) return '';\r\n\r\n        if(num<10) num = '0'+num;\r\n        return num;\r\n    }\r\n\r\n\r\n    onFormatDate(date?: Date): string{    \r\n        if(typeof date == \"string\") date = new Date(date);\r\n\r\n        if(date && date.toDateString()!=\"Invalid Date\"){\r\n            console.log(date);\r\n            return date.getFullYear() +'-'+ this.addExtraZero(date.getMonth() + 1) +'-'+ this.addExtraZero(date.getDate());\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    setDateValue(v:any){\r\n        this.setValue(v,null,null);\r\n    }\r\n    setHourValue(e:any,v:any){\r\n        this.setValue(null,v,null);\r\n    }\r\n    setMinuteValue(e:any,v:any){\r\n        this.setValue(null,null,v);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md4 \" +styles.marginBottom} >      \r\n                    <DatePicker   \r\n                        disabled={this.props.disbaled}\r\n                        firstDayOfWeek={DayOfWeek.Monday}\r\n                        value={this.state.dateModel}                 \r\n                        formatDate={this.onFormatDate}       \r\n                        onSelectDate={this.setDateValue}/>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm6 ms-md2 \"+styles.marginBottom}>  \r\n                    <Dropdown \r\n                        disabled={this.props.disbaled}\r\n                        options={this.state.availableHours}\r\n                        selectedKey={this.state.hoursModel.key}\r\n                        onChange={this.setHourValue}/>\r\n                </div>   \r\n                <div className={\"ms-Grid-col ms-sm6 ms-md2 \"+styles.marginBottom}>     \r\n                    <Dropdown \r\n                        disabled={this.props.disbaled}\r\n                        options={this.state.availableMinutes}\r\n                        selectedKey={this.state.minutesModel.key}\r\n                        onChange={this.setMinuteValue}/>\r\n                </div>    \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class NumberFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : \"\"\r\n        }; \r\n\r\n        this.setValue = this.setValue.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : \"\"\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        let oldValue = this.state.value+'';\r\n\r\n        if(isNaN(value)){\r\n            this.setState({value:oldValue}, this.forceUpdate);\r\n        } else {            \r\n            let integer = parseInt(value);\r\n\r\n            ns.value = integer;\r\n            this.setState(ns, this.forceUpdate);\r\n\r\n            if(this.props.onChanged)\r\n                this.props.onChanged(integer);\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3 \"+styles.marginBottom} >      \r\n                    <TextField  \r\n                        disabled={this.props.disbaled}\r\n                        value={this.state.value}\r\n                        onChange={(e,v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md6 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class LongTextFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : \"\"\r\n        };\r\n        this.setStateValue = this.setStateValue.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : \"\"\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    \r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value.key; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md8 \"+styles.marginBottom} >      \r\n                    <TextField  \r\n                        disabled={this.props.disbaled}\r\n                        multiline rows={4} \r\n                        value={this.state.value}\r\n                        onChange={(e,v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType, MessageBar } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class HeadingRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = { \r\n        }; \r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                {!this.props.hasInfo && \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md11\"} >       \r\n                    <MessageBar>{this.props.label}</MessageBar>\r\n                </div>}\r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md11 \"} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <MessageBar>{this.props.label}</MessageBar>\r\n                    </TooltipHost>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\n\r\n\r\n\r\nexport default class DownloadTextFieldRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : \"\",\r\n            showErrorDialog:false,\r\n        }; \r\n\r\n        this.onDownload = this.onDownload.bind(this);\r\n        this.hideErrorDialog = this.hideErrorDialog.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : \"\"\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value.key; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    onDownload(){\r\n        let apiAddress = \"https://www.google.com/\";\r\n        fetch(apiAddress).then(data=>{\r\n            if(this.props.onDownloadData){\r\n                this.props.onDownloadData(data);\r\n            }\r\n        }).catch(error=>{\r\n            console.error(error);\r\n            this.setState({showErrorDialog:true}, this.forceUpdate);\r\n        });\r\n    }\r\n\r\n    hideErrorDialog(){\r\n        this.setState({showErrorDialog:false}, this.forceUpdate);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md3\"} >      \r\n                    <Label>{this.props.label} {this.props.isRequired && <span className={styles.required}>*</span>}</Label>\r\n                </div>        \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md2 \" +styles.marginBottom + \" \" +styles.downloadButtonContainer} >      \r\n                    <PrimaryButton \r\n                        iconProps={{iconName:\"Download\"}}\r\n                        allowDisabledFocus\r\n                        onClick={this.onDownload} \r\n                    />\r\n                </div>  \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md6 \"+styles.marginBottom} >      \r\n                    <TextField  \r\n                        disabled={this.props.disbaled}\r\n                        value={this.state.value}\r\n                        onChange={(e,v)=>{this.setValue(v)}}/>\r\n                </div>     \r\n                {this.props.hasInfo &&     \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md1 \" +styles.textRight} >      \r\n                    <TooltipHost content={this.props.info}>\r\n                        <Icon iconName=\"Info\" className={\"ms-IconExample \" +styles.infoIcon} />\r\n                    </TooltipHost>\r\n                </div>}\r\n                {this.state.showErrorDialog &&\r\n                <Dialog\r\n                    hidden={!this.state.showErrorDialog}\r\n                    title=\"Failed to download data.\"\r\n                    onDismiss={this.hideErrorDialog}\r\n                >\r\n                    Please check your internet connection or {this.props.label}\r\n                </Dialog> }\r\n            </div>\r\n        );\r\n    }\r\n}","export default class FormRules{\r\n\r\n    runRules(model:object):object{\r\n\r\n        /*\r\n        //Examples: \r\n        model = this.setValueIf((model)=>{ return (model as any)[\"Some Field #1 Internal name\"]!=null && (model as any)[\"Some Field #1 Internal name\"] == 'XYZ'; }, \r\n                            \"Some Field #3\",\r\n                            model, \r\n                            \"New value\");\r\n        */\r\n\r\n        //3. Overview / Mission identity / Field: Country #1 (If Type = CRO then set field value to value of field CoR collecting.)\r\n        let check3 = (model:any)=>{ return (model as any)[\"Operation type\"]!=null && (model as any)[\"Operation type\"] === 'CRO'; };\r\n        model = this.setValueIf(check3, \"Country #1\", model, (model as any)[\"CoR collecting\"]);\r\n\r\n        //8. Overview / Other states and participants field: Country name (2 If Type = CRO then set field value of field CoR collecting.) \r\n        let check8 = (model:any)=>{ return (model as any)[\"Operation type\"]!=null && (model as any)[\"Operation type\"] === 'CRO'; };\r\n        model = this.setValueIf(check8, \"osap_Country name\", model, (model as any)[\"CoR collecting\"]);\r\n\r\n        return model;\r\n    }\r\n\r\n\r\n\r\n    private setValueIf(condition:(model:object)=>boolean, fieldInternalNameToChangeValue:string, model:object, newValue:any){\r\n\r\n        if(condition(model) && (model as any)[fieldInternalNameToChangeValue]!=null){\r\n            (model as any)[fieldInternalNameToChangeValue] = newValue;\r\n        }\r\n\r\n        return model;\r\n    }\r\n\r\n}","import IFormStructure, { ITabDefinition, IFieldDefinition } from \"../Model/IFormStructure\";\r\nimport { unwatchFile } from \"fs\";\r\nimport FormStructure from \"../Model/FormStructure\";\r\nimport { keyframes } from \"office-ui-fabric-react\";\r\n\r\nexport default class TabRules{\r\n\r\n\r\n    \r\n\r\n    runRules(model:object, formStructure:IFormStructure ):IFormStructure{ \r\n        \r\n        //2. Overview / Mission identity / Field: Extra MS monitored (3 Field repeated for each extra MS agreeing to be monitored.) \r\n        let check2 = (model:any, structure:IFormStructure)=>{\r\n            let exisitingExtraTabs = formStructure[\"Overview\"].filter(x=>{return x.tab.indexOf('Extra MS monitored #')==0;});\r\n            return  (model as any)[\"Extra MS monitored\"]!=null &&\r\n                    (model as any)[\"Extra MS monitored\"].length != exisitingExtraTabs.length;\r\n        };        \r\n        formStructure = this.setExtraMSRulesTabs(check2,formStructure, model);\r\n\r\n\r\n        //16. Return-Flight / Returning returnees (Omit if type = CRO)\r\n        let check16 = (model:any)=>{ return (model as any)[\"Operation type\"]!=null && (model as any)[\"Operation type\"] === 'CRO'; };\r\n        formStructure = this.hideIf(check16, \"Return-flight\",\"Returning returnees\",  formStructure, model);\r\n\r\n        return formStructure;\r\n    }\r\n\r\n    \r\n    private hideIf(condition:(model:object)=>boolean, navLabel:string, tabLabelToHide:string, structure:IFormStructure, model:object ):IFormStructure{\r\n        if(condition(model) && \r\n        (structure as any)[navLabel]!=null){\r\n\r\n            let nav = (structure as any)[navLabel];\r\n            for(let i=0;i<nav.length;i++){\r\n                if(nav[i].tab == tabLabelToHide){\r\n                    nav[i].isHidden=true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let newStructure:any = structure;\r\n            newStructure[navLabel] = nav;\r\n            structure = newStructure;\r\n\r\n        }\r\n\r\n        return structure;\r\n    }\r\n\r\n    private setExtraMSRulesTabs(condition:(model:object, formStructure:IFormStructure)=>boolean, structure:IFormStructure, model:object ){\r\n        let modelLabel = \"Extra MS monitored\";\r\n        let tabLabel = \"Extra MS monitored #\";\r\n\r\n        if(condition(model,structure) && (model as any)[modelLabel]!=null){\r\n            //remove all extra ms tabs\r\n            structure = this.removeTabs(structure, model, \"Overview\", tabLabel);\r\n            let clearStructure:IFormStructure = (new FormStructure()).formStructure;\r\n            let tabDefinition =  clearStructure[\"Overview\"].filter(t=>{return t.tab === \"MS monitored\"})[0];\r\n            //recreate extra ms tabs\r\n            let count = (model as any)[modelLabel].length;\r\n            for(let i=0;i<count;i++){\r\n                let td:ITabDefinition = JSON.parse(JSON.stringify(tabDefinition));\r\n\r\n                td.fields = td.fields.map((f:IFieldDefinition)=>{\r\n                    f.value=null;\r\n                    f.internalName = f.internalName+' #'+(i+1);\r\n                    return f;\r\n                });\r\n\r\n                td.tab = tabLabel+(i+1);\r\n                structure = this.insertTab(structure,\"Overview\",\"MS monitored\", td);\r\n            }\r\n\r\n            //for all Tabs of 'Extra MS monitored #' over possible count model should be cleared\r\n            let clearFields = clearStructure[\"Overview\"].filter(t=>{return t.tab === \"MS monitored\"})[0].fields;\r\n\r\n            clearFields.forEach((field:IFieldDefinition)=>{                \r\n                Object.keys(model).forEach((modelKey)=>{\r\n                    if( modelKey.indexOf(field.internalName) == 0 && \r\n                        modelKey.indexOf('#')!=-1 &&\r\n                        parseInt(modelKey.split('#')[1])>count){\r\n                            let nm = model as any;\r\n                            delete nm[modelKey];\r\n                            model = nm;  //This clearly works only beacause of parametrizing model as reference. A little bit hacky;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        return structure;\r\n    }\r\n\r\n    private removeTabs(structure:IFormStructure, model:object, nav:string, labelStartsWith:string){\r\n        let newStructure = (structure as any);\r\n        let newTabs = newStructure[nav];\r\n        newTabs = newTabs.filter((t:ITabDefinition)=>{return t.tab.indexOf(labelStartsWith)!=0});\r\n        newStructure[nav]=newTabs;\r\n        structure=newStructure;\r\n        return structure;\r\n    }\r\n\r\n    private insertTab(structure:IFormStructure, nav:string, lastLabelContains:string, tabDefinition:ITabDefinition){\r\n        let newStructure = (structure as any);\r\n        let newTabs = newStructure[nav];\r\n        //get tabAfter\r\n        let index = 0;\r\n        for(let i=0;i<newTabs.length;i++){\r\n            if(newTabs[i].tab.indexOf(lastLabelContains)!=-1) index=i;\r\n        }\r\n\r\n        //insert\r\n        newTabs.splice(index+1, 0, tabDefinition);\r\n\r\n        newStructure[nav]=newTabs;\r\n        structure=newStructure;        \r\n        return structure;\r\n    }\r\n\r\n}","import IFormStructure from \"../Model/IFormStructure\";\r\n\r\nexport default class NavRules{\r\n\r\n    runRules(model:object, formStructure:IFormStructure ):IFormStructure{\r\n        //@TODO all nav manipulations goes here\r\n        return formStructure;\r\n    }\r\n\r\n}","export default class IIncident{\r\n    \"MS contingent(s) involved\"?:any;\r\n    \"Description of incident\"?:string;\r\n    \"Coercive measures\"?:any;\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition, FieldType } from \"./../Model/IFormStructure\";\r\nimport HeadingRow from \"./HeadingRow\";\r\nimport IIncident from \"../Model/IIncident\";\r\nimport OptionsFieldRow from \"./OptionsRow\";\r\nimport LongTextFieldRow from \"./LongTextFieldRow\";\r\nimport FormStructure from \"../Model/FormStructure\";\r\n\r\nexport default class IncidentsRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : null,\r\n            incidents: this.props.value ? this.props.value : []\r\n        };\r\n\r\n        this.setStateValue = this.setStateValue.bind(this);\r\n        this.setValue = this.setValue.bind(this);\r\n        this.addIncident = this.addIncident.bind(this);\r\n        this.setIncidentValue = this.setIncidentValue.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        //TODO: reloading data\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : null,\r\n            incidents: this.props.value ? this.props.value : []\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    setIncidentValue(fieldName:string, value:any, index:number){\r\n        let ns = this.state.incidents as any;\r\n        ns[index][fieldName] = value;\r\n        this.setState({incidents:ns}, this.forceUpdate);\r\n\r\n        this.setValue(ns);\r\n    }\r\n    \r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    addIncident(){\r\n        let inc = this.state.incidents;\r\n        inc.push(new IIncident());\r\n        this.setState({incidents:inc}, this.forceUpdate);\r\n        this.setValue(inc);\r\n    }\r\n\r\n    removeIncident(index:number){\r\n        let inc = this.state.incidents;\r\n        inc.splice(index,1);\r\n\r\n        this.setState({incidents:inc}, this.forceUpdate);\r\n        this.setValue(inc);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>                     \r\n                {this.state.incidents.map((i:IIncident, index:number)=>{\r\n                    return <div className={\"ms-Grid-col ms-md12 ms-sm12\"} \r\n                        key={'incident_'+index} >\r\n                        <HeadingRow \r\n                            label={\"Incident #\"+(index+1)} \r\n                            internalName=\"incidentHeading\" \r\n                            isHeading={true} \r\n                            isRequired={false} \r\n                            hasInfo={false} \r\n                            type={FieldType.heading}/>\r\n                        <OptionsFieldRow \r\n                            label=\"MS contingent(s) involved\" \r\n                            internalName=\"MS contingent(s) involved\" \r\n                            value={this.state.incidents[index][\"MS contingent(s) involved\"]}\r\n                            onChanged={((v:any)=>{this.setIncidentValue(\"MS contingent(s) involved\",v,index);}).bind(this)}\r\n                            options={FormStructure.countries} \r\n                            isRequired={true} \r\n                            hasInfo={true} \r\n                            info={\"@TODO\"} \r\n                            type={FieldType.dropdown} />\r\n                        <LongTextFieldRow \r\n                            label=\"Description of incident\" \r\n                            internalName=\"Description of incident\" \r\n                            value={this.state.incidents[index][\"Description of incident\"]}\r\n                            onChanged={((v:any)=>{this.setIncidentValue(\"Description of incident\",v,index);}).bind(this)}\r\n                            isRequired={true}  \r\n                            hasInfo={true} \r\n                            info={\"@TODO\"} \r\n                            type={FieldType.longtext} />\r\n                        <OptionsFieldRow \r\n                            label=\"Coercive measures?\" \r\n                            internalName=\"Coercive measures?\" \r\n                            value={this.state.incidents[index][\"Coercive measures?\"]}\r\n                            onChanged={((v:any)=>{this.setIncidentValue(\"Coercive measures?\",v,index);}).bind(this)}\r\n                            options={FormStructure.countries} \r\n                            isRequired={true} \r\n                            hasInfo={true} \r\n                            info={\"@TODO\"} \r\n                            type={FieldType.dropdown} />      \r\n                        <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                            <div className={\"ms-Grid-col ms-sm12 ms-md3\"}>\r\n                                <DefaultButton   \r\n                                    iconProps={{iconName:\"Cancel\"}}\r\n                                    text=\"Remove incident\"\r\n                                    onClick={(()=>this.removeIncident(index)).bind(this)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>;\r\n                })}      \r\n                <div className={\"ms-Grid-col ms-md11 ms-sm12 \"+styles.textRight}>\r\n                    {this.state.incidents.length==0 &&\r\n                    <Text className={styles.centerText}>No incidents occured.</Text>}\r\n                    <br/>\r\n                    {this.state.incidents.length>0 &&\r\n                    <hr/>}\r\n                    <PrimaryButton iconProps={{iconName:\"Add\"}} text=\"Add incident\" onClick={this.addIncident}/> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import IFormStructure from \"../Model/IFormStructure\";\r\n\r\nexport default class FormRulesStructure{\r\n\r\n    runRules(model:object, structure: IFormStructure):IFormStructure{\r\n    \r\n        //9. Overview / Other states and participants section: Teams of other states (3 If Type = NRO then this section is absent.)\r\n        let check9 = (model:any)=>{ return (model as any)[\"Operation type\"]!=null && (model as any)[\"Operation type\"]== 'NRO'; };\r\n        structure = this.hideIf(check9, \"Teams of other states\",  model, structure, \"Overview\",\"Other states and participants\");\r\n        structure = this.hideIf(check9, \"Other state personnel\",  model, structure, \"Overview\",\"Other states and participants\");\r\n        structure = this.hideIf(check9, \"Monitors of other states\",  model, structure, \"Overview\",\"Other states and participants\");\r\n        \r\n        //10. Pre-departure / Transfer, embarkation / Field: Scheduled transport (1 Only present if Type = Scheduled.) -\r\n        let check10 = (model:any)=>{ return (model as any)[\"Operation type\"]!=null && (model as any)[\"Operation type\"]!= 'Scheduled'; };\r\n        structure = this.hideIf(check10, \"Scheduled transport\",  model, structure, \"Pre-departure\",\"Transfer, embarkation\");\r\n\r\n        return structure;\r\n    }\r\n\r\n\r\n    private hideIf(condition:(model:object)=>boolean, fieldInternalToHide:string, model:object, structure: IFormStructure, navLabel:string, tabLabel:string){\r\n\r\n\r\n        if(condition(model) && \r\n            (structure as any)[navLabel]!=null){            \r\n            \r\n            let nav = (structure as any)[navLabel];\r\n\r\n            for(let i=0;i<nav.length;i++){\r\n                if(nav[i].tab == tabLabel){\r\n                    for(let l=0;l<nav[i].fields.length;l++){\r\n                        if(nav[i].fields[l].internalName === fieldInternalToHide){\r\n                            nav[i].fields[l].isHidden = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let newStructure:any = structure;\r\n            newStructure[navLabel] = nav;\r\n            structure = newStructure;\r\n        }\r\n\r\n        return structure;\r\n    }\r\n\r\n}","export default class IExtraMSMonitored{\r\n    country?:string;\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './../formstyles.module.css'; \r\nimport IFormStructure, { ITabDefinition, IFieldDefinition, FieldType } from \"./../Model/IFormStructure\";\r\nimport HeadingRow from \"./HeadingRow\"; \r\nimport OptionsFieldRow from \"./OptionsRow\";\r\nimport LongTextFieldRow from \"./LongTextFieldRow\";\r\nimport FormStructure from \"../Model/FormStructure\";\r\nimport IExtraMSMonitored from \"../Model/IExtraMSMonitored\";\r\n\r\nexport default class ExtraMSMonitoredRow extends React.Component<IFieldDefinition,any>{ \r\n\r\n    constructor(props:IFieldDefinition){\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.props.value ? this.props.value : null,\r\n            extraMSMonitored: this.props.value ? this.props.value : []\r\n        };\r\n\r\n        this.setStateValue = this.setStateValue.bind(this);\r\n        this.setValue = this.setValue.bind(this);\r\n        this.addMS = this.addMS.bind(this);\r\n        this.setMSValue = this.setMSValue.bind(this);\r\n        this.removeMS = this.removeMS.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(prevProps:IFieldDefinition){\r\n        //TODO: reloading data\r\n        let newState = {\r\n            value: prevProps.value ? prevProps.value : null,\r\n            extraMSMonitored: this.props.value ? this.props.value : []\r\n        };\r\n        this.setState(newState, this.forceUpdate);\r\n    }\r\n\r\n    setStateValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    setMSValue(fieldName:string, value:any, index:number){\r\n        let ns = this.state.extraMSMonitored as any;\r\n        ns[index][fieldName] = value;\r\n        this.setState({extraMSMonitored:ns}, this.forceUpdate);\r\n\r\n        this.setValue(ns);\r\n    }\r\n    \r\n    setValue(value:any){\r\n        let ns = this.state as any;\r\n        ns.value = value; \r\n        this.setState(ns, this.forceUpdate);\r\n\r\n        if(this.props.onChanged)\r\n            this.props.onChanged(value);\r\n    }\r\n\r\n    addMS(){\r\n        let inc = this.state.extraMSMonitored;\r\n        inc.push(new IExtraMSMonitored());\r\n        this.setState({extraMSMonitored:inc}, this.forceUpdate);\r\n        this.setValue(inc);\r\n    }\r\n\r\n    removeMS(index:number){\r\n        let inc = this.state.extraMSMonitored;\r\n        inc.splice(index,1);\r\n\r\n        this.setState({extraMSMonitored:inc}, this.forceUpdate);\r\n        this.setValue(inc);\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>                     \r\n                {this.state.extraMSMonitored.map((i:IExtraMSMonitored, index:number)=>{\r\n                    return <div className={\"ms-Grid-col ms-md12 ms-sm12\"} \r\n                        key={'extraMSMonitored_'+(index+1)} >  \r\n                        <OptionsFieldRow \r\n                            label={\"Extra MS Monitored #\"+(index+1)}\r\n                            internalName=\"Extra MS Monitored\" \r\n                            value={this.state.extraMSMonitored[index].country}\r\n                            onChanged={((v:any)=>{this.setMSValue(\"country\",v,index);}).bind(this)}\r\n                            options={FormStructure.countries} \r\n                            isRequired={true} \r\n                            hasInfo={true} \r\n                            info={\"@TODO\"} \r\n                            type={FieldType.dropdown} />     \r\n                        \r\n                    </div>;\r\n                })}      \r\n                {this.state.extraMSMonitored.length>0 &&           \r\n                <div className={\"ms-Grid-col ms-sm6 ms-md5\"}>\r\n                    <DefaultButton   \r\n                        iconProps={{iconName:\"Cancel\"}}\r\n                        text=\"Remove MS Monitored\"\r\n                        onClick={(()=>this.removeMS(this.state.extraMSMonitored.length-1)).bind(this)}\r\n                    />\r\n                </div>}\r\n                <div className={\"ms-Grid-col ms-md6 ms-sm6 \"+styles.textRight + (this.state.extraMSMonitored.length>0 ? \"\" : \" ms-mdPush5\")}> \r\n                    <PrimaryButton iconProps={{iconName:\"Add\"}} text=\"Add Extra MS Monitored\" onClick={this.addMS}/> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { Stack, TextField, PrimaryButton, Button, DefaultButton, Text, Nav, INavLink, Pivot, PivotItem, Label, FontIcon, IconButton, Icon, TooltipHost, ProgressIndicator, Dialog, DialogType } from \"office-ui-fabric-react\";\r\n\r\nimport styles from './formstyles.module.css';\r\nimport FormStructure from \"./Model/FormStructure\";\r\nimport IFormState from \"./IFormState\";\r\nimport IFormStructure, { ITabDefinition, IFieldDefinition, FieldType } from \"./Model/IFormStructure\";\r\nimport TextFieldRow from \"./Fields/TextFieldRow\";\r\nimport OptionsFieldRow from \"./Fields/OptionsRow\";\r\nimport DateFieldRow from \"./Fields/DateFieldRow\";\r\nimport DateTimeFieldRow from \"./Fields/DateTimeFieldRow\";\r\nimport NumberFieldRow from \"./Fields/NumberFieldRow\";\r\nimport LongTextFieldRow from \"./Fields/LongTextFieldRow\";\r\nimport HeadingRow from \"./Fields/HeadingRow\";\r\nimport DownloadTextFieldRow from \"./Fields/DownloadTextField\";\r\nimport FormRules from \"./Rules/FormRules\";\r\nimport TabRules from \"./Rules/TabRules\";\r\nimport NavRules from \"./Rules/NavRules\";\r\nimport IncidentsRow from \"./Fields/IncidentsRow\";\r\nimport IIncident from \"./Model/IIncident\";\r\nimport FormRulesStructure from \"./Rules/FormRulesStructure\";\r\nimport ExtraMSMonitoredRow from \"./Fields/ExtraMSMonitoredRow\";\r\n\r\n\r\n\r\nexport default class Form extends React.Component<any,IFormState>{ \r\n\r\n    apiAddress = \"https://www.google.com/\"; //\"https://jsonplaceholder.typicode.com/posts\";\r\n    apiAddressIsLive = \"https://www.google.com/\"; //\"https://jsonplaceholder.typicode.com\";\r\n\r\n    formStructure:IFormStructure = (new FormStructure()).formStructure;\r\n    formRules:FormRules = new FormRules();\r\n    formRulesStructure:FormRulesStructure = new FormRulesStructure();\r\n    tabRules:TabRules = new TabRules();\r\n    navRules:NavRules = new NavRules();\r\n\r\n\r\n    formRefs={};\r\n\r\n    constructor(props:any){\r\n        super(props);\r\n\r\n\r\n        let defaultNav = Object.keys(this.formStructure)[0];\r\n        let defaultTab =  (this.formStructure  as any)[defaultNav][0].tab;\r\n\r\n        this.state={  \r\n            awaitingRequests:0,\r\n            navDefinition: [{\r\n                links: Object.keys(this.formStructure).map(fs=>{\r\n                    return {\r\n                        name: fs,\r\n                        url: '',\r\n                        key: fs,\r\n                        target: '_blank'\r\n                    }\r\n                }) \r\n            }],\r\n            selectedNav: defaultNav,\r\n            selectedTab: defaultTab,\r\n            showRequestOffline:false,\r\n            showRequestSentDialog:false,\r\n            showRequestOfflineSent:false,\r\n            showPleaseWait:false,\r\n            showValidationDialog:false,\r\n            failedValidations:[],\r\n            model:{},\r\n        }; \r\n\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.setValue = this.setValue.bind(this); \r\n        this.trySendAgain = this.trySendAgain.bind(this);\r\n        this.onNavClick = this.onNavClick.bind(this);\r\n        this.onTabClick = this.onTabClick.bind(this);\r\n        this.getFormForTab = this.getFormForTab.bind(this);\r\n        this.getFieldRow = this.getFieldRow.bind(this);\r\n        this.onSaveDraft = this.onSaveDraft.bind(this);\r\n        this.onBackToDraft = this.onBackToDraft.bind(this);\r\n        this.runRules = this.runRules.bind(this);\r\n\r\n        setTimeout(this.trySendAgain, 1000); //first run\r\n        setInterval(this.trySendAgain, 30000);\r\n    }    \r\n\r\n    trySendAgain(){\r\n        let offlineRequests = localStorage.getItem(\"offlineRequests\");\r\n        if(offlineRequests!=null && offlineRequests != \"\"){\r\n\r\n            let offlineParsed = JSON.parse(offlineRequests);\r\n            this.setState({awaitingRequests:offlineParsed.length}, this.forceUpdate);\r\n\r\n            let requestsArray:any[] = offlineParsed;\r\n            let requestsCopy = requestsArray;\r\n            \r\n            fetch(this.apiAddressIsLive).then(ready=>{                            \r\n                requestsArray.forEach((e, i) => {\r\n                    fetch(this.apiAddress, {\r\n                        method: \"GET\", //\"POST\",\r\n                        //body: JSON.stringify(e), //Uncomment\r\n                    }).then(success=>{\r\n                        console.log('success',success); \r\n                        this.setState({showRequestOfflineSent:true},this.forceUpdate);\r\n                        requestsCopy.splice(i,1);\r\n                        localStorage.setItem(\"offlineRequests\", JSON.stringify(requestsCopy))\r\n                        this.setState({awaitingRequests:requestsCopy.length});\r\n                    });\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    onCancel(){         \r\n        localStorage.setItem(\"draftRequest\", \"\");\r\n        this.formStructure = (new FormStructure()).formStructure;\r\n        this.setState({ \r\n            model:{},\r\n        }, this.forceUpdate);\r\n    }\r\n\r\n    onBackToDraft(){\r\n        let modelFromStorage = localStorage.getItem(\"offlineRequests\");\r\n        localStorage.setItem(\"offlineRequests\",\"\");\r\n        if(modelFromStorage && modelFromStorage.length>0){\r\n            let model = JSON.parse(modelFromStorage)[0];\r\n            this.setState({\r\n                model:model,\r\n                awaitingRequests:0,\r\n            }, this.forceUpdate);            \r\n        }\r\n    }\r\n\r\n    onSubmit(){\r\n        console.log(this.state);\r\n        this.setState({\r\n            showPleaseWait:false,\r\n            failedValidations:[],\r\n            navDefinition: [{\r\n                links: Object.keys(this.formStructure).map(fs=>{\r\n                    return {\r\n                        name: fs,\r\n                        url: '',\r\n                        key: fs,\r\n                        target: '_blank'\r\n                    }\r\n                }) \r\n            }],\r\n        }, this.forceUpdate);\r\n\r\n        let isValid=true;\r\n        let requiredEmptyFields = Array<any>();\r\n\r\n        //Navs\r\n        Object.keys(this.formStructure).forEach(navKey => {\r\n            let nav = (this.formStructure as any)[navKey];\r\n            //Tabs\r\n            nav.forEach((tab:ITabDefinition)=>{\r\n                //Fields\r\n                tab.fields.forEach((f:IFieldDefinition)=>{\r\n\r\n                    if(f.isRequired && !f.isHidden && !f.disbaled && (this.state.model[f.internalName] == null || this.state.model[f.internalName] == \"\")) {\r\n                        isValid=false;\r\n                        requiredEmptyFields.push({\r\n                            nav:navKey,\r\n                            tab:tab.tab,\r\n                            field:f.label\r\n                        });                    \r\n                    }\r\n                });\r\n            })            \r\n        });\r\n\r\n        //Validating incidents\r\n        if(this.state.model[\"Incidents\"] && this.state.model[\"Incidents\"].length>0){\r\n            this.state.model[\"Incidents\"].forEach(((i:IIncident, index:number)=>{\r\n                if( i[\"MS contingent(s) involved\"] == null ||\r\n                    i[\"Coercive measures\"] != null){\r\n                    isValid=false;\r\n                    requiredEmptyFields.push({\r\n                        nav:\"Incident(s)\",\r\n                        tab:\"Incident(s)\",\r\n                        field:\"Incident #\"+(index+1)\r\n                    });     \r\n                }\r\n            }));\r\n        }\r\n\r\n        if(!isValid){\r\n            this.setState({\r\n                showValidationDialog:true,\r\n                showPleaseWait:false,\r\n                failedValidations: requiredEmptyFields,                \r\n                navDefinition: [{\r\n                    links: Object.keys(this.formStructure).map(fs=>{\r\n                        return {\r\n                            name: fs,\r\n                            url: '',\r\n                            key: fs,\r\n                            target: '_blank',\r\n                            icon: (requiredEmptyFields.filter(x=>{return x.nav == fs}).length > 0 ? \"StatusErrorFull\" : undefined)\r\n                        }\r\n                    }) \r\n                }],\r\n            }, this.forceUpdate);            \r\n        } else {\r\n            \r\n            this.setState({\r\n                showPleaseWait:false,                \r\n            }, this.forceUpdate);\r\n\r\n            fetch(this.apiAddress, {\r\n                method: \"GET\", //POST\r\n                //body: JSON.stringify(this.state.model), //Uncomment\r\n            }).then(success=>{\r\n                localStorage.setItem(\"draftRequest\", \"\");\r\n                this.setState({showPleaseWait:false}, this.forceUpdate);\r\n                console.log('success',success); \r\n                this.setState({\r\n                    showRequestSentDialog: true,\r\n                    model:{}\r\n                }, this.forceUpdate);\r\n            }).catch(failure=>{\r\n                this.setState({\r\n                    showPleaseWait:false\r\n                }, this.forceUpdate);\r\n                console.log('failure',failure);\r\n                \r\n                let offlineRequests = localStorage.getItem(\"offlineRequests\");\r\n                let newOfflineRequests = null;\r\n\r\n                if(offlineRequests == null || offlineRequests == \"\" ){ \r\n                    newOfflineRequests = [this.state.model]; \r\n                } else {\r\n                    newOfflineRequests = JSON.parse(offlineRequests);\r\n                    newOfflineRequests.push(this.state.model);\r\n                }  \r\n                localStorage.setItem(\"offlineRequests\",JSON.stringify(newOfflineRequests));\r\n                this.setState({\r\n                    awaitingRequests:newOfflineRequests.length,\r\n                    showRequestOffline:true,\r\n                    model:{}\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    onSaveDraft(){        \r\n        localStorage.setItem(\"draftRequest\", JSON.stringify(this.state.model));\r\n    }\r\n\r\n    onDownloadData(data:any){\r\n        //update fields abd staff\r\n        this.onSaveDraft();\r\n    }\r\n\r\n    componentDidMount() {        \r\n        //Navs\r\n        Object.keys(this.formStructure).forEach(navKey => {\r\n            let nav = (this.formStructure as any)[navKey];\r\n            //Tabs\r\n            nav.forEach((tab:ITabDefinition)=>{\r\n                //Fields\r\n                tab.fields.forEach((f:IFieldDefinition)=>{\r\n                    (this.formRefs as any)[f.internalName]=React.createRef();\r\n                });\r\n            })\r\n            \r\n        });\r\n\r\n        let draft = localStorage.getItem(\"draftRequest\");\r\n        if(draft!=null && draft!=\"\")\r\n            this.setState({model:JSON.parse(draft)}, this.runRules);\r\n        \r\n\r\n    }\r\n\r\n\r\n    setValue(fieldName:string, value:any){\r\n        let ns = this.state as any;\r\n        ns[fieldName] = value;\r\n        this.setState(ns, this.forceUpdate);\r\n    }\r\n\r\n    onModelChanged(label:string, value:string){      \r\n        let newState = this.state;         \r\n        newState.model[label] = value;\r\n        this.setState(newState, ()=>{\r\n            this.runRules(newState);\r\n        });        \r\n    }\r\n\r\n    runRules(newState?:any){\r\n        if(newState==null) newState = this.state;\r\n\r\n        let model = newState.model;\r\n        \r\n        this.formStructure = this.formRulesStructure.runRules(model,this.formStructure);\r\n        this.formStructure = this.navRules.runRules(model,this.formStructure);\r\n        this.formStructure = this.tabRules.runRules(model,this.formStructure); \r\n\r\n        model = this.formRules.runRules(model);\r\n\r\n        this.forceUpdate()\r\n    }\r\n\r\n    onNavClick(ev: React.MouseEvent<HTMLElement> | undefined, item?: INavLink | undefined){\r\n        if(item){ \r\n            this.setState({\r\n                selectedNav : item.name, \r\n                selectedTab : \"\",\r\n            }, ()=>{\r\n                this.forceUpdate();            \r\n                this.onTabClick({props:{itemKey:(this.formStructure  as any)[item.name][0].tab}} as PivotItem);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onTabClick(item?: PivotItem, ev?: React.MouseEvent<HTMLElement>){\r\n        if(item && item.props.itemKey){\r\n            console.log(item);\r\n            this.setState({selectedTab: item.props.itemKey}, this.forceUpdate);\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactElement<any> {\r\n        return (\r\n            <div className={styles.formStyles}>\r\n                <div className=\"ms-Grid\" dir=\"ltr\" >\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className={\"ms-Grid-col ms-sm12 ms-md3 ms-lg2\"}>\r\n                            <div className={styles.companyLogo}></div>                            \r\n                        </div>\r\n                        <div className={\"ms-Grid-col ms-sm12 ms-md9 ms-lg10 \"+styles.headerTextParent}>\r\n                            <span className={styles.headerText} >FREM III</span>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.awaitingRequests == 0 &&\r\n                    <div className={\"ms-Grid-row \"+styles.content}>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md4 ms-lg3 ms-xl2\">\r\n                            <Nav \r\n                                selectedKey={this.state.selectedNav}\r\n                                onLinkClick={this.onNavClick}\r\n                                groups={this.state.navDefinition}\r\n                                styles={{\r\n                                    root: { \r\n                                        boxSizing: 'border-box',\r\n                                        border: '1px solid #eee'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md8 ms-lg9 ms-xl10\">\r\n                            {this.state.selectedTab && this.state.selectedTab!= \"\" && \r\n                            <Pivot\r\n                                defaultSelectedIndex={0} \r\n                                className={styles.msPivotFix}\r\n                                selectedKey={this.state.selectedTab}\r\n                                onLinkClick={this.onTabClick}                                                                                                \r\n                                >\r\n                                {(this.formStructure as any)[this.state.selectedNav]\r\n                                    .filter((tab:ITabDefinition)=>{return !tab.isHidden})\r\n                                    .map((tab:ITabDefinition)=>{\r\n                                    return (<PivotItem \r\n                                                headerText={tab.tab} \r\n                                                key={tab.tab}                                                 \r\n                                                itemIcon={this.state.failedValidations.filter(x=>x.tab == tab.tab).length>0 ? \"StatusErrorFull\" : undefined}>\r\n                                                {this.getFormForTab(tab.fields, tab.tab, this.state.selectedNav)}\r\n                                            </PivotItem>);\r\n                                })} \r\n                            </Pivot>}                       \r\n                        </div>\r\n                    </div>}\r\n                    <div className=\"ms-Grid-row\">  \r\n                        {this.state.awaitingRequests == 0 &&  \r\n                        <div className={\"ms-Grid-col ms-sm12 ms-md12 \"+styles.centerText} >             \r\n                            <ProgressIndicator label={\"No awaiting offline requests.\"} percentComplete={0}/>  \r\n                        </div>} \r\n                        {this.state.awaitingRequests!=undefined && this.state.awaitingRequests > 0 &&  \r\n                        <div className={\"ms-Grid-col ms-sm12 ms-md12 \"+styles.centerText} >   \r\n                            <br/>    \r\n                            <br/>          \r\n                            <ProgressIndicator label={\"Offline request is awaiting for internet connection.\"} />                                                          \r\n                            <PrimaryButton         \r\n                                text=\"Back to draft\" \r\n                                allowDisabledFocus\r\n                                onClick={this.onBackToDraft} />  \r\n                        </div>}\r\n                    </div>\r\n                </div>     \r\n                {this.state.showRequestSentDialog &&\r\n                <Dialog\r\n                    hidden={!this.state.showRequestSentDialog}\r\n                    title=\"Form has been saved\"\r\n                    onDismiss={()=>{this.setValue(\"showRequestSentDialog\", false)}}\r\n                >\r\n                    Your form has been successfully saved.\r\n                </Dialog> }\r\n                {this.state.showRequestOffline &&\r\n                <Dialog\r\n                    hidden={!this.state.showRequestOffline}\r\n                    onDismiss={()=>{this.setValue(\"showRequestOffline\", false)}}\r\n                    title=\"Form has been postponed.\"\r\n                >\r\n                    As you are offline - the form will be sent as you reconnect to the internet.\r\n                </Dialog> }\r\n                {this.state.showRequestOfflineSent &&\r\n                <Dialog\r\n                    hidden={!this.state.showRequestOfflineSent}\r\n                    onDismiss={()=>{this.setValue(\"showRequestOfflineSent\", false)}}\r\n                    title=\"Postponed form has been saved.\"\r\n                >\r\n                    Your previously prepared form has been succesfully saved.\r\n                </Dialog> }                \r\n                {this.state.showPleaseWait &&\r\n                <Dialog \r\n                    hidden={!this.state.showPleaseWait}\r\n                    onDismiss={()=>{this.setValue(\"showPleaseWait\", false)}}\r\n                    title=\"Sending...\"\r\n                    modalProps={{isBlocking:true}}\r\n                >\r\n                    <ProgressIndicator />                             \r\n                </Dialog> }     \r\n                {this.state.showValidationDialog &&\r\n                <Dialog \r\n                    hidden={!this.state.showValidationDialog}\r\n                    onDismiss={()=>{this.setValue(\"showValidationDialog\", false)}}\r\n                    title=\"Validation failed\" \r\n                    minWidth={600}\r\n                >\r\n                    <p>Those fields are required:</p>\r\n                    <ul>\r\n                    {this.state.failedValidations.map(v=>{\r\n                        return (<li>{v.nav} / {v.tab} / {v.field}</li>);\r\n                    })}\r\n                    </ul>\r\n                </Dialog> }\r\n            </div>\r\n            );\r\n    }\r\n\r\n    getFieldRow(fieldProps:IFieldDefinition){\r\n\r\n        if(fieldProps.isHidden){\r\n            return <div></div>;\r\n        }\r\n\r\n        switch(fieldProps.type){\r\n            case FieldType.text:\r\n                return <TextFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)}/>;            \r\n            case FieldType.longtext:\r\n                return <LongTextFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)}/>;\r\n            case FieldType.integer:\r\n                return <NumberFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)}/>;\r\n            case FieldType.dropdown:\r\n                return <OptionsFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />\r\n            case FieldType.date:\r\n                return <DateFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />\r\n            case FieldType.datetime:\r\n                return <DateTimeFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />\r\n            case FieldType.heading:\r\n                return <HeadingRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />\r\n            case FieldType.downloadData:\r\n                return <DownloadTextFieldRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            onDownloadData={this.onDownloadData}\r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />         \r\n            case FieldType.incident:\r\n                return <IncidentsRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />             \r\n            case FieldType.extraMSMonitored:\r\n                return <ExtraMSMonitoredRow \r\n                            key={fieldProps.internalName} \r\n                            {...fieldProps} \r\n                            value={this.state.model[fieldProps.internalName]} \r\n                            onChanged={v=>this.onModelChanged(fieldProps.internalName,v)} />        \r\n            default:\r\n                return <p>This field failed to render</p>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getFormForTab(fields:Array<IFieldDefinition>, tabName:string, navName:string){\r\n        return (\r\n        <div className={\"ms-Grid \"+styles.fullWidth} >\r\n            {fields.map((f:IFieldDefinition)=>{return this.getFieldRow(f);})}            \r\n            <div className={\"ms-Grid-row \"+styles.fieldRow}>           \r\n                <div className={\"ms-Grid-col ms-sm12 ms-md11 \"+ styles.textRight} > \r\n                    <PrimaryButton      \r\n                        className={styles.actionButtonMargin} \r\n                        iconProps={{iconName:\"Send\"}}           \r\n                        text=\"Submit\" \r\n                        allowDisabledFocus\r\n                        onClick={this.onSubmit} />           \r\n                    <PrimaryButton      \r\n                        className={styles.actionButtonMargin}      \r\n                        iconProps={{iconName:\"SaveAs\"}}      \r\n                        text=\"Save draft\" \r\n                        allowDisabledFocus\r\n                        onClick={this.onSaveDraft} />   \r\n                    <DefaultButton    \r\n                        className={styles.actionButtonMargin}                  \r\n                        text=\"Cancel\" \r\n                        iconProps={{iconName:\"Cancel\"}}\r\n                        allowDisabledFocus\r\n                        onClick={this.onCancel} />                          \r\n                </div>                   \r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Stack, Text, Link, FontWeights } from 'office-ui-fabric-react';\r\nimport Form from './Form';\r\nimport { initializeIcons } from '@uifabric/icons';\r\n\r\nconst boldStyle = { root: { fontWeight: FontWeights.semibold } };\r\n\r\n\r\nexport const App: React.FunctionComponent = () => {\r\n  initializeIcons();\r\n\r\n  return (\r\n    <Form className={\"ms-Fabric\"}/>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n\r\n\r\n \r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ((process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'development') && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    /*if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }*/\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n              \r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        console.log(\"No service worker found. Probably a different app. Reload the page.\");\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      ); \r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\r\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\r\nimport * as serviceWorker from './serviceWorker'; \r\nimport './fabric.min.css';\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    ':global(body), :global(html), :global(#root)': {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: '100vh'\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <Customizer {...FluentCustomizations}>\r\n    <App />\r\n  </Customizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}